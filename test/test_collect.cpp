#include <collect.h>

#ifdef NATIVE
#include <gtest/gtest.h>
#include <iostream>

NodeList list;
Collection collection(list);

uint8_t message[4][21] = {
    0x1, 0x2, 0x3, 0x4, 0x2, 0x4,  0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0xcc, 0xcc,  0x4c, 0x3e, 0x46,
    0x1, 0x2, 0x3, 0x4, 0x2, 0x4,  0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x5, 0xcc, 0xcc,  0x4c, 0x3e, 0x47,
    0x1, 0x2, 0x3, 0x4, 0x2, 0x4,  0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x6, 0xcc, 0xcc,  0x4c, 0x3e, 0x48,
    0x1, 0x2, 0x3, 0x4, 0x2, 0x4,  0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x7, 0xcc, 0xcc,  0x4c, 0x3e, 0x49,
};

uint8_t id[4][12] = {
    0x2, 0x4,  0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x4,
    0x2, 0x4,  0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x5,
    0x2, 0x4,  0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x6,
    0x2, 0x4,  0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x4, 0x2, 0x7
};

int check(int i)
{
    collection.recv(message[i], 21);
    float o2 = list.getNode(id[i]).getO2Num();
    if (std::abs(o2 - 0.2f) < 0.0001)
    {
        return 0;
    }
    else
    {
        return -1;
    }
}


TEST(checkTest, testCheck1)
{
    EXPECT_EQ(0, check(0));
    EXPECT_EQ(0, check(1));
    EXPECT_EQ(0, check(2));
    EXPECT_EQ(0, check(3));
    EXPECT_EQ(4, list.size());
}

int main(int argc, char **argv) {
    ::testing::InitGoogleTest(&argc, argv);
    
    return RUN_ALL_TESTS();
}


#endif